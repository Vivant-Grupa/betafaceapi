/* tslint:disable */
/* eslint-disable */
/**
 * Betaface API 2.0
 * Betaface face recognition API.
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { Point } from './point';
import { Tag } from './tag';
/**
 * represents a face information.
 * @export
 * @interface Face
 */
export interface Face {
    /**
     * face unique identifier.
     * @type {string}
     * @memberof Face
     */
    faceUuid?: string;
    /**
     * media unique identifier.
     * @type {string}
     * @memberof Face
     */
    mediaUuid?: string;
    /**
     * x coordinate of the face bounding box center in pixels.
     * @type {number}
     * @memberof Face
     */
    x?: number;
    /**
     * y coordinate of the face bounding box center in pixels.
     * @type {number}
     * @memberof Face
     */
    y?: number;
    /**
     * width of the face bounding box center in pixels.
     * @type {number}
     * @memberof Face
     */
    width?: number;
    /**
     * height of the face bounding box center in pixels.
     * @type {number}
     * @memberof Face
     */
    height?: number;
    /**
     * in-plane rotation (roll) of the face bounding box center in degrees.
     * @type {number}
     * @memberof Face
     */
    angle?: number;
    /**
     * confidence-like value of the face detection, low detection scores (lower than 0.5 for example) correspond to higher probability of false detection.
     * @type {number}
     * @memberof Face
     */
    detectionScore?: number;
    /**
     * facial landmark points.
     * @type {Array<Point>}
     * @memberof Face
     */
    points?: Array<Point>;
    /**
     * user-defined facial landmark points.
     * @type {Array<Point>}
     * @memberof Face
     */
    userPoints?: Array<Point>;
    /**
     * list of detected or labelled face tags - classifiers, attributes, measurements.
     * @type {Array<Tag>}
     * @memberof Face
     */
    tags?: Array<Tag>;
    /**
     * assigned person id and namespace in format name@namespace.
     * @type {string}
     * @memberof Face
     */
    personId?: string;
    /**
     * reserved for future video processing
     * @type {number}
     * @memberof Face
     */
    appearanceId?: number;
    /**
     * reserved for future video processing
     * @type {string}
     * @memberof Face
     */
    start?: string;
    /**
     * reserved for future video processing
     * @type {string}
     * @memberof Face
     */
    duration?: string;
}
